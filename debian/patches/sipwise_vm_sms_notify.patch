From: Sipwise Development Team <support@sipwise.com>
Date: Mon, 21 Feb 2022 14:17:23 +0100
Subject: sipwise_vm_sms_notify

---
 apps/app_voicemail.c | 176 ++++++++++++++-------------------------------------
 1 file changed, 48 insertions(+), 128 deletions(-)

diff --git a/apps/app_voicemail.c b/apps/app_voicemail.c
index 8dcbc73..e3182eb 100644
--- a/apps/app_voicemail.c
+++ b/apps/app_voicemail.c
@@ -1073,6 +1073,7 @@ static int silencethreshold = 128;
 static char serveremail[80] = ASTERISK_USERNAME;
 static char mailcmd[160] = SENDMAIL;	/* Configurable mail cmd */
 static char externnotify[160];
+static char externpager[160];
 static struct ast_smdi_interface *smdi_iface = NULL;
 static char vmfmts[80] = "wav";
 static double volgain;
@@ -5458,6 +5459,15 @@ static int vm_delete(char *file)
 	SCOPE_EXIT_RTN_VALUE(res, "Done. RC: %d\n", res);
 }
 
+static void prep_pager_sub_vars(struct ast_channel *ast, struct ast_vm_user *vmu, char *cidnum, char *dur, char *date)
+{
+	/* Prepare variables for substitution in pager body */
+	pbx_builtin_setvar_helper(ast, "VM_DUR", dur);
+	pbx_builtin_setvar_helper(ast, "VM_MAILBOX", vmu->dialed_num);
+	pbx_builtin_setvar_helper(ast, "VM_CIDNUM", (!ast_strlen_zero(cidnum) ? cidnum : "anonymous"));
+	pbx_builtin_setvar_helper(ast, "VM_DATE", date);
+}
+
 static void prep_email_sub_vars(struct ast_channel *ast, struct ast_vm_user *vmu, int msgnum, char *context, char *mailbox, const char *fromfolder, char *cidnum, char *cidname, char *dur, char *date, const char *category, const char *flag)
 {
 	char callerid[256];
@@ -6135,153 +6145,56 @@ static int sendmail(char *srcemail,
 	return 0;
 }
 
-static int sendpage(char *srcemail, char *pager, int msgnum, char *context, char *mailbox, const char *fromfolder, char *cidnum, char *cidname, int duration, struct ast_vm_user *vmu, const char *category, const char *flag)
+static void run_externpager(char *pager, char *dialed_num, char *cidnum, int duration, struct ast_vm_user *vmu)
 {
-	char enc_cidnum[256], enc_cidname[256];
+	char arguments[2048];
 	char date[256];
-	char host[MAXHOSTNAMELEN] = "";
-	char who[256];
+	char from[256];
+	char body[1024];
 	char dur[PATH_MAX];
-	char tmp[80] = "/tmp/astmail-XXXXXX";
-	char tmp2[PATH_MAX];
 	struct ast_tm tm;
-	FILE *p;
-	struct ast_str *str1 = ast_str_create(16), *str2 = ast_str_create(16);
-
-	if (!str1 || !str2) {
-		ast_free(str1);
-		ast_free(str2);
-		return -1;
-	}
+	struct ast_str *str1 = ast_str_create(16);
 
-	if (cidnum) {
-		strip_control_and_high(cidnum, enc_cidnum, sizeof(enc_cidnum));
-	}
-	if (cidname) {
-		strip_control_and_high(cidname, enc_cidname, sizeof(enc_cidname));
-	}
-
-	if ((p = ast_file_mkftemp(tmp, VOICEMAIL_FILE_MODE & ~my_umask)) == NULL) {
-		ast_log(AST_LOG_WARNING, "Unable to launch '%s' (can't create temporary file)\n", mailcmd);
-		ast_free(str1);
-		ast_free(str2);
-		return -1;
-	}
-	gethostname(host, sizeof(host)-1);
-	if (strchr(srcemail, '@')) {
-		ast_copy_string(who, srcemail, sizeof(who));
-	} else {
-		snprintf(who, sizeof(who), "%s@%s", srcemail, host);
+	if (!str1) {
+		return;
 	}
-	snprintf(dur, sizeof(dur), "%d:%02d", duration / 60, duration % 60);
-	ast_strftime(date, sizeof(date), "%a, %d %b %Y %H:%M:%S %z", vmu_tm(vmu, &tm));
-	fprintf(p, "Date: %s\n", date);
 
-	/* Reformat for custom pager format */
-	ast_strftime_locale(date, sizeof(date), pagerdateformat, vmu_tm(vmu, &tm), S_OR(vmu->locale, NULL));
+	if (!ast_strlen_zero(externpager)) {
 
-	if (!ast_strlen_zero(pagerfromstring)) {
-		struct ast_channel *ast;
-		if ((ast = ast_dummy_channel_alloc())) {
-			char *ptr;
-			prep_email_sub_vars(ast, vmu, msgnum + 1, context, mailbox, fromfolder, enc_cidnum, enc_cidname, dur, date, category, flag);
-			ast_str_substitute_variables(&str1, 0, ast, pagerfromstring);
-
-			if (check_mime(ast_str_buffer(str1))) {
-				int first_line = 1;
-				ast_str_encode_mime(&str2, 0, ast_str_buffer(str1), strlen("From: "), strlen(who) + 3);
-				while ((ptr = strchr(ast_str_buffer(str2), ' '))) {
-					*ptr = '\0';
-					fprintf(p, "%s %s" ENDL, first_line ? "From:" : "", ast_str_buffer(str2));
-					first_line = 0;
-					/* Substring is smaller, so this will never grow */
-					ast_str_set(&str2, 0, "%s", ptr + 1);
-				}
-				fprintf(p, "%s %s <%s>" ENDL, first_line ? "From:" : "", ast_str_buffer(str2), who);
-			} else {
-				fprintf(p, "From: %s <%s>" ENDL, ast_str_quote(&str2, 0, ast_str_buffer(str1)), who);
-			}
-			ast = ast_channel_unref(ast);
+		if (!ast_strlen_zero(pagerfromstring)) {
+			ast_copy_string(from, pagerfromstring, sizeof(from));
 		} else {
-			ast_log(AST_LOG_WARNING, "Cannot allocate the channel for variables substitution\n");
+			ast_copy_string(from, "Sipwise Voicemail", sizeof(from));
 		}
-	} else {
-		fprintf(p, "From: Asterisk PBX <%s>" ENDL, who);
-	}
 
-	if (check_mime(vmu->fullname)) {
-		int first_line = 1;
-		char *ptr;
-		ast_str_encode_mime(&str2, 0, vmu->fullname, strlen("To: "), strlen(pager) + 3);
-		while ((ptr = strchr(ast_str_buffer(str2), ' '))) {
-			*ptr = '\0';
-			fprintf(p, "%s %s" ENDL, first_line ? "To:" : "", ast_str_buffer(str2));
-			first_line = 0;
-			/* Substring is smaller, so this will never grow */
-			ast_str_set(&str2, 0, "%s", ptr + 1);
-		}
-		fprintf(p, "%s %s <%s>" ENDL, first_line ? "To:" : "", ast_str_buffer(str2), pager);
-	} else {
-		fprintf(p, "To: %s <%s>" ENDL, ast_str_quote(&str2, 0, vmu->fullname), pager);
-	}
+		snprintf(dur, sizeof(dur), "%d:%02d", duration / 60, duration % 60);
 
-	if (!ast_strlen_zero(pagersubject)) {
-		struct ast_channel *ast;
-		if ((ast = ast_dummy_channel_alloc())) {
-			prep_email_sub_vars(ast, vmu, msgnum + 1, context, mailbox, fromfolder, cidnum, cidname, dur, date, category, flag);
-			ast_str_substitute_variables(&str1, 0, ast, pagersubject);
-			if (check_mime(ast_str_buffer(str1))) {
-				int first_line = 1;
-				char *ptr;
-				ast_str_encode_mime(&str2, 0, ast_str_buffer(str1), strlen("Subject: "), 0);
-				while ((ptr = strchr(ast_str_buffer(str2), ' '))) {
-					*ptr = '\0';
-					fprintf(p, "%s %s" ENDL, first_line ? "Subject:" : "", ast_str_buffer(str2));
-					first_line = 0;
-					/* Substring is smaller, so this will never grow */
-					ast_str_set(&str2, 0, "%s", ptr + 1);
-				}
-				fprintf(p, "%s %s" ENDL, first_line ? "Subject:" : "", ast_str_buffer(str2));
+		ast_strftime(date, sizeof(date), "%a, %d %b %Y %H:%M:%S %z", vmu_tm(vmu, &tm));
+		ast_strftime_locale(date, sizeof(date), pagerdateformat, vmu_tm(vmu, &tm), S_OR(vmu->locale, NULL));
+
+		if (pagerbody) {
+			struct ast_channel *ast;
+			if ((ast = ast_dummy_channel_alloc())) {
+				prep_pager_sub_vars(ast, vmu, cidnum, dur, date);
+				ast_str_substitute_variables(&str1, 0, ast, pagerbody);
+				ast = ast_channel_unref(ast);
+				snprintf(body, sizeof(body), "%s", ast_str_buffer(str1));
 			} else {
-				fprintf(p, "Subject: %s" ENDL, ast_str_buffer(str1));
+				ast_log(AST_LOG_WARNING, "Cannot allocate the channel for variables substitution\n");
 			}
-			ast = ast_channel_unref(ast);
 		} else {
-			ast_log(AST_LOG_WARNING, "Cannot allocate the channel for variables substitution\n");
+			snprintf(body, sizeof(body), "New %s long voicemail from %s in box %s, on %s",
+					 dur, cidnum, dialed_num, date);
 		}
-	} else {
-		if (ast_strlen_zero(flag)) {
-			fprintf(p, "Subject: New VM" ENDL);
-		} else {
-			fprintf(p, "Subject: New %s VM" ENDL, flag);
-		}
-	}
 
-	/* End of headers */
-	fputs(ENDL, p);
-
-	if (pagerbody) {
-		struct ast_channel *ast;
-		if ((ast = ast_dummy_channel_alloc())) {
-			prep_email_sub_vars(ast, vmu, msgnum + 1, context, mailbox, fromfolder, cidnum, cidname, dur, date, category, flag);
-			ast_str_substitute_variables(&str1, 0, ast, pagerbody);
-			fprintf(p, "%s" ENDL, ast_str_buffer(str1));
-			ast = ast_channel_unref(ast);
-		} else {
-			ast_log(AST_LOG_WARNING, "Cannot allocate the channel for variables substitution\n");
-		}
+		snprintf(arguments, sizeof(arguments), "%s '%s' '%s' '%s' '%s' '%s' '%s' '%s' &",
+		externpager, from, pager,  dialed_num, cidnum, dur, date, body);
+		ast_log(LOG_DEBUG, "Executing %s\n", arguments);
+		ast_safe_system(arguments);
 	} else {
-		fprintf(p, "New %s long %s msg in box %s\n"
-				"from %s, on %s", dur, flag, mailbox, (cidname ? cidname : (cidnum ? cidnum : "unknown")), date);
+		ast_log(LOG_DEBUG, "No externpager defined, skipping\n");
 	}
-
-	fclose(p);
-	snprintf(tmp2, sizeof(tmp2), "( %s < %s ; rm -f %s ) &", mailcmd, tmp, tmp);
-	ast_safe_system(tmp2);
-	ast_debug(1, "Sent page to %s with command '%s'\n", pager, mailcmd);
 	ast_free(str1);
-	ast_free(str2);
-	return 0;
 }
 
 /*!
@@ -8677,7 +8590,7 @@ static int notify_new_message(struct ast_channel *chan, struct ast_vm_user *vmu,
 	}
 
 	if (!ast_strlen_zero(vmu->pager)) {
-		sendpage(myserveremail, vmu->pager, msgnum, vmu->context, vmu->mailbox, mbox(vmu, 0), cidnum, cidname, duration, vmu, category, flag);
+		run_externpager(vmu->pager, vmu->dialed_num, cidnum, duration, vmu)
 	}
 
 	if (ast_test_flag(vmu, VM_DELETE))
@@ -14776,6 +14689,13 @@ static int actual_load_config(int reload, struct ast_config *cfg, struct ast_con
 			externnotify[0] = '\0';
 		}
 
+		if ((val = ast_variable_retrieve(cfg, "general", "externpager"))) {
+			ast_copy_string(externpager, val, sizeof(externpager));
+			ast_debug(1, "found externpager: %s\n", externpager);
+		} else {
+			externpager[0] = '\0';
+		}
+
 		/* SMDI voicemail notification */
 		if ((val = ast_variable_retrieve(cfg, "general", "smdienable")) && ast_true(val)) {
 			ast_debug(1, "Enabled SMDI voicemail notification\n");
